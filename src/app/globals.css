@tailwind base;
@tailwind components;
@tailwind utilities;


html,
body {
  padding: 0;
  margin: 0;
  font-family: -apple-system, Arial,
    Helvetica,
    sans-serif, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen,
    Ubuntu, Cantarell, Fira Sans, Droid Sans;
}

.spritegreen1 {
  background: url("./../../public/images/catsprites.png") no-repeat -7px -55px;
  width: 29px;
  height: 26px;
}

.spirtered1 {
  background: url('./../../public/images/catsprites.png') no-repeat -42px -56px;
  width: 29px;
  height: 26px;
}


.spritegrey1 {
  background: url('./../../public/images/catsprites.png') no-repeat -108px -56px;
  width: 27px;
  height: 26px;
}

.spritepurple1 {
  background: url('./../../public/images/catsprites.png') no-repeat -75px -54px;
  width: 35px;
  height: 28px;
}

.spritepurpletick1 {
  background: url('./../../public/images/catsprites.png') no-repeat -172px -55px;
  width: 30px;
  height: 28px;
}

.spritegreen2 {
  background: url('./../../public/images/catsprites.png') no-repeat -4px -126px;
  width: 50px;
  height: 42px;
}

.spritered2 {
  background: url('./../../public/images/catsprites.png') no-repeat -57px -4px;
width: 49px;
  height: 41px;
}

.spritepurple2 {
  background: url('./../../public/images/catsprites.png') no-repeat -108px -1px;
  width: 49px;
    height: 49px;
}

.spritegrey2 {
  background: url('./../../public/images/catsprites.png') no-repeat -159px -124px;
  width: 44px;
  height: 43px;
}

.spritepurpletick2 {
  background: url('./../../public/images/catsprites.png') no-repeat -5px -177px;
  width: 54px;
  height: 50px;
}

/* @layer base {
  html {
    font-family: "Arial", system-ui, sans-serif;
  }
} */

/* :root {
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;
}

@media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;
  }
} */

/* body {
  color: rgb(var(--foreground-rgb));
  background: linear-gradient(
      to bottom,
      transparent,
      rgb(var(--background-end-rgb))
    )
    rgb(var(--background-start-rgb));
} */

.loaderdefault {
  --c1: #673b14;
  --c2: #f8b13b;
  width: 40px;
  height: 80px;
  border-top: 4px solid var(--c1);
  border-bottom: 4px solid var(--c1);
  background: linear-gradient(90deg, var(--c1) 2px, var(--c2) 0 5px, var(--c1) 0) 50%/7px 8px no-repeat;
  display: grid;
  overflow: hidden;
  animation: l5-0 2s infinite linear;
}

.loaderdefault::before,
.loaderdefault::after {
  content: "";
  grid-area: 1/1;
  width: 75%;
  height: calc(50% - 4px);
  margin: 0 auto;
  border: 2px solid var(--c1);
  border-top: 0;
  box-sizing: content-box;
  border-radius: 0 0 40% 40%;
  -webkit-mask:
    linear-gradient(#000 0 0) bottom/4px 2px no-repeat,
    linear-gradient(#000 0 0);
  -webkit-mask-composite: destination-out;
  mask-composite: exclude;
  background:
    linear-gradient(var(--d, 0deg), var(--c2) 50%, #0000 0) bottom /100% 205%,
    linear-gradient(var(--c2) 0 0) center/0 100%;
  background-repeat: no-repeat;
  animation: inherit;
  animation-name: l5-1;
}

.loaderdefault::after {
  transform-origin: 50% calc(100% + 2px);
  transform: scaleY(-1);
  --s: 3px;
  --d: 180deg;
}

@keyframes l5-0 {
  80% {
    transform: rotate(0)
  }

  100% {
    transform: rotate(0.5turn)
  }
}

@keyframes l5-1 {

  10%,
  70% {
    background-size: 100% 205%, var(--s, 0) 100%
  }

  70%,
  100% {
    background-position: top, center
  }
}

.loadercircle {
  width: 20px;
  height: 20px;
  border: 2px solid #FFF;
  border-bottom-color: transparent;
  border-radius: 50%;
  display: inline-block;
  box-sizing: border-box;
  animation: rotation 0.5s linear infinite;
}

@keyframes rotation {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
}

.sizeTransition1 {
  animation-name: sizeincreaseanimation;
  animation-duration: 5s;
  width: 20rem;
  animation-iteration-count: infinite;
}

@keyframes sizeincreaseanimation {
  0% {
      
      height: 10rem;
    }
  
    50% {
      height: 20rem;
      /* The middle state, maintaining the width */
    }
  
    100% {
      height:10rem;
      /* Returning back to the initial width */
    }
}